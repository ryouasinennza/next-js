name: 'PNPM install'

runs:
  using: 'composite'
  steps:
    - name: Get node & pnpm version
      shell: bash
      run: |
        pnpm_version=$(cat ./package.json | jq -r .engines.pnpm)
        echo "PNPM_VERSION=${pnpm_version}" >> $GITHUB_ENV
        node_version=$(cat ./package.json | jq -r .engines.node)
        echo "NODE_VERSION=${node_version}" >> $GITHUB_ENV

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      uses: pnpm/action-setup@v2.2.4
      id: pnpm-install
      with:
        version: ${{ env.PNPM_VERSION }}
        run_install: false

    - name: Expose pnpm config(s) through "$GITHUB_OUTPUT"
      id: pnpm-config
      shell: bash
      run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Cache rotation keys
      id: cache-rotation
      shell: bash
      run: echo "YEAR_MONTH=$(/bin/date -u "+%Y%m")" >> $GITHUB_OUTPUT

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-

    - name: Cache hit
      shell: bash
      run: echo "cache-hit=${{ steps.cache.outputs }}"

    - name: Setup pnpm cache main branch
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-cache-main-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: ${{ runner.os }}-pnpm-store-cache-main-

    - name: Install dependencies
      shell: bash
      run: pnpm install --frozen-lockfile --prefer-offline
